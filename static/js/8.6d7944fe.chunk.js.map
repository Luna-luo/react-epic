{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"2gBAOA,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KA+GKI,UA3GG,WAAO,IAChBC,EAAWC,cAAXD,UACDE,EAAUC,cAiChB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,qBACF,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QACLC,SApCa,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACPC,MAAK,WACJP,QAAQC,IAAI,gEACZN,EAAQa,KAAK,QACZC,OAAM,WACPT,QAAQC,IAAI,gCA4BdS,eAxBmB,SAAAC,GACrBX,QAAQC,IAAI,UAAWU,MAyBrB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BAEX,CACEC,UA/Be,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACzCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CACzDD,QAAQG,cAgCX,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BAEX,CACES,IAAI,EACJT,QAAQ,mCAEV,CACEU,IAAI,GACJV,QAAQ,sCAIZ,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BA3DI,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAoB,CACzCX,UADyC,SAC/BC,EAAMC,GACd,OAAGS,EAAc,cAAgBT,EAAcE,QAAQG,UAC/CH,QAAQC,OAAO,mDA6DrB,kBAAC,IAAMK,SAAP,OAKF,kBAAC,IAAKf,KAAStB,EACb,kBAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/8.6d7944fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport styled from 'styled-components';\nimport {useStores} from \"../stores\";\nimport { useHistory } from 'react-router-dom';\n\n\nconst Wrapper = styled.div`\n  max-width:600px;\n  margin:30px auto;\n  box-shadow: 2px 2px 4px 0 rgba(0,0,0,0.2);\n  border-radius:4px;\n  padding:20px;\n`\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom:30px;\n`\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 20,\n  },\n};\n\nconst Component = () => {\n  const {AuthStore}=useStores();\n  const history = useHistory();\n\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register()\n      .then(()=>{\n        console.log('注册成功，跳转到首页')\n        history.push('/');\n      }).catch(()=>{\n        console.log('注册失败')\n    })\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const validateUsername = (rule, value)=>{\n    if (/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\n    if(value.length < 4 || value.length > 10) return Promise.reject('长度为4~10个字符');\n    return Promise.resolve();\n  };\n\n  const validateConfirm= ({getFieldValue})=>({\n    validator(rule, value){\n      if(getFieldValue('password') === value) return Promise.resolve();\n       return Promise.reject('两次密码不一样');\n    }\n  })\n\n  return (\n    <Wrapper>\n      <Title>注册</Title>\n    <Form\n      {...layout}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"用户名\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n          {\n            validator:validateUsername\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"密码\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          {\n            min:4,\n            message:'最少4个字符'\n          },\n          {\n            max:10,\n            message:'最多10个字符'\n          }\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        label=\"确认密码\"\n        name=\"confirmPassword\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n          validateConfirm\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n    </Wrapper>\n  );\n};\n\nexport default Component;"],"sourceRoot":""}